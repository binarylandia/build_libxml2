#!/usr/bin/env bash

set -euxo pipefail

REPO_URL="https://gitlab.gnome.org/GNOME/libxml2.git"
VERSION="2.12.9"
BRANCH="v${VERSION}"

BUILD_DIR=".build"
INSTALL_DIR="/opt/libxml2"
OUT_DIR=".out"

NICE="nice -19 ionice -c2 -n5"
JOBS="${JOBS:=$(($(nproc --all) + 2))}"

build_time="$(date '+%Y%m%d%H%M%S')"

export CFLAGS="-w -g0 -O2 ${CFLAGS:-}"
export CXXFLAGS="-w -g0 -O2 ${CXXFLAGS:-}"
export LDFLAGS="-s ${LDFLAGS:-}"

export CFLAGS="-static-libgcc -static-libstdc++ ${CFLAGS:-}"
export CXXFLAGS="-static-libgcc -static-libstdc++ ${CXXFLAGS:-}"
export LDFLAGS="-static-libgcc -static-libstdc++ ${LDFLAGS:-}"

export CFLAGS="-fPIC ${CFLAGS:-}"
export CXXFLAGS="-fPIC ${CXXFLAGS:-}"
export LDFLAGS="-fPIC ${LDFLAGS:-}"

function abspath() {
  readlink -m "$1"
}

function log() {
  tee -a "${1}" | stdbuf -oL grep --color=always -iE "error|fail|cannot|can't|unable|"
}

function package() {
  local input_dir="${1}"
  local output_tarball="${2}"

  ${NICE} find "${input_dir}" -printf "%P\n" \
    | ${NICE} tar --no-recursion -cf - -C "${input_dir}" --files-from=- \
    | ${NICE} xz -T0 -k > "${output_tarball}"
}

build_dir="$(abspath ${BUILD_DIR})"
mkdir -p "${build_dir}"
outdir="$(abspath "${OUT_DIR}")"
mkdir -p "${outdir}"

pushd "$build_dir" >/dev/null
  src_dir="libxml2-${BRANCH}"

  if [ ! -d "${src_dir}" ]; then
    git clone --recursive --depth=100 -b "${BRANCH}" "${REPO_URL}" "${src_dir}"
  fi

  pushd "${src_dir}" >/dev/null
    ${NICE} cmake -S "." -B "build" \
      -LAH \
      -Wno-dev -Wno-deprecated \
      -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}" \
      -DCMAKE_INSTALL_LIBDIR="lib" \
      -DCMAKE_INSTALL_INCLUDEDIR="include" \
      -DCMAKE_BUILD_TYPE="Release" \
      -DCMAKE_VERBOSE_MAKEFILE="OFF" \
      \
      -DBUILD_SHARED_LIBS="OFF" \
      -DBUILD_STATIC_LIBS="ON" \
      \
      -DLIBXML2_WITH_ICONV="OFF" \
      -DLIBXML2_WITH_LZMA="OFF" \
      -DLIBXML2_WITH_PYTHON="OFF" \
      -DLIBXML2_WITH_ZLIB="ON" \
      2>&1 | log "build.log"

    ${NICE} cmake --build "build" --parallel="${JOBS}" 2>&1 | log "build.log"

    ${NICE} cmake --install "build" 2>&1 | log "build.log"

    mv "${INSTALL_DIR}/include/libxml2/libxml" "${INSTALL_DIR}/include/libxml"
    rm -rf "${INSTALL_DIR}/include/libxml2"

    sed -i "s|prefix=${INSTALL_DIR}|prefix=\$\{pcfiledir\}/../..|g" "${INSTALL_DIR}/lib/pkgconfig/libxml-2.0.pc"
    sed -i'' 's|-I${includedir}/libxml2|-I${includedir}|' "${INSTALL_DIR}/lib/pkgconfig/libxml-2.0.pc"

    find "${INSTALL_DIR}/lib/cmake" -type f \
      -exec sed -i'' 's|set(LIBXML2_INCLUDE_DIR    ${PACKAGE_PREFIX_DIR}/include/libxml2)|set(LIBXML2_INCLUDE_DIR    ${PACKAGE_PREFIX_DIR}/include)|g; s|INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/libxml2"|INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"|g' {} +

    cp "build.log" "${INSTALL_DIR}/"

    package "${INSTALL_DIR}" "${outdir}/libxml2-${VERSION}-static-${build_time}.tar.xz"
  popd >/dev/null
popd >/dev/null

